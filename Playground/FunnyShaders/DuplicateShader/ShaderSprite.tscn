[gd_scene load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform vec4 color1:hint_color;
uniform vec4 color2:hint_color;
uniform vec4 color3:hint_color;
uniform vec4 color4:hint_color;
uniform float rand_val;

vec4 get_color(vec4 ori_col){
	if(rand_val < 1.0){
//		vec3 new_col = ori_col.rgb * color1.rgb;
		return vec4(color1.rgb,ori_col.a);
	}
	else if(rand_val < 2.0){
//		vec3 new_col = ori_col.rgb * color2.rgb;
		return vec4(color2.rgb,ori_col.a);
	}
	else if(rand_val < 3.0){
//		vec3 new_col = ori_col.rgb * color3.rgb;
		return vec4(color3.rgb,ori_col.a);
	}
	else{
//		vec3 new_col = ori_col.rgb * color4.rgb;
		return vec4(color4.rgb,ori_col.a);
	}
}

void fragment(){
	COLOR = get_color(texture(TEXTURE,UV).rgba);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color1 = Color( 0.72549, 0.964706, 0.054902, 1 )
shader_param/color2 = Color( 0, 0.956863, 0.933333, 1 )
shader_param/color3 = Color( 0.956863, 0, 0.921569, 1 )
shader_param/color4 = Color( 0.854902, 0, 0, 1 )
shader_param/rand_val = 3.5

[sub_resource type="GDScript" id=3]
script/source = "extends Sprite


# Called when the node enters the scene tree for the first time.
func _ready():
	self.set_material(self.get_material().duplicate(true))
	var mat = self.get_material()
	mat.set_shader_param(\"rand_val\",randf()*4) # FIXME : global shader ?

"

[node name="ShaderSprite" type="Sprite"]
material = SubResource( 2 )
script = SubResource( 3 )
